{ parameter
    (or (or (pair %balance_of
               (list %requests (pair (address %owner) (nat %token_id)))
               (contract %callback
                  (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
            (pair %mint (address %address) (nat %token_id)))
        (or (list %transfer
               (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount)))))
            (list %update_operators
               (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                   (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))) ;
  storage
    (pair (pair (pair (address %admin) (big_map %ledger (pair address nat) nat))
                (big_map %metadata string bytes)
                (big_map %operators (pair (address %owner) (address %operator) (nat %token_id)) unit))
          (address %oracle_address)
          (big_map %tokens nat unit)) ;
  code { PUSH string "FA2_NOT_OWNER" ;
         LAMBDA
           (pair (big_map (pair address nat) nat) address nat)
           nat
           { UNPAIR 3 ; DUG 2 ; PAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { DUP 2 ;
                 NIL (pair (pair address nat) nat) ;
                 DUP 3 ;
                 CAR ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR 3 ;
                 LEFT (list (pair (pair address nat) nat)) ;
                 LOOP_LEFT
                   { UNPAIR 3 ;
                     SWAP ;
                     IF_CONS
                       { DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         DUP 5 ;
                         PAIR 3 ;
                         DUP 8 ;
                         SWAP ;
                         EXEC ;
                         DIG 4 ;
                         SWAP ;
                         DIG 2 ;
                         PAIR ;
                         CONS ;
                         SWAP ;
                         DIG 2 ;
                         PAIR 3 ;
                         LEFT (list (pair (pair address nat) nat)) }
                       { DROP ;
                         RIGHT
                           (pair (big_map (pair address nat) nat)
                                 (list (pair address nat))
                                 (list (pair (pair address nat) nat))) } } ;
                 DIG 3 ;
                 DROP ;
                 NIL operation ;
                 DIG 3 ;
                 CDR ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 TRANSFER_TOKENS ;
                 CONS }
               { DIG 2 ;
                 DROP ;
                 DUP 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DROP 2 ; PUSH string "NOT_AUTHORISED" ; FAILWITH }
                    { DUP 2 ;
                      CDR ;
                      CDR ;
                      DUP 2 ;
                      CDR ;
                      MEM ;
                      IF { DROP 2 ; PUSH string "TOKEN_ID_ALREADY_EXISTS" ; FAILWITH }
                         { DUP 2 ;
                           CDR ;
                           CDR ;
                           UNIT ;
                           SOME ;
                           DUP 3 ;
                           CDR ;
                           UPDATE ;
                           DUP 3 ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           DUP 3 ;
                           CAR ;
                           PAIR ;
                           DUP ;
                           CDR ;
                           DUP 2 ;
                           CAR ;
                           CDR ;
                           DIG 4 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           PUSH nat 1 ;
                           SOME ;
                           DUP 6 ;
                           CDR ;
                           DIG 6 ;
                           CAR ;
                           PAIR ;
                           UPDATE ;
                           DIG 3 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           PAIR } } ;
                 NIL operation } }
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 DUP 2 ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR 3 ;
                 LEFT (big_map (pair address nat) nat) ;
                 LOOP_LEFT
                   { UNPAIR 3 ;
                     DIG 2 ;
                     IF_CONS
                       { SWAP ;
                         DUP 4 ;
                         DUP 3 ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         DIG 5 ;
                         DIG 5 ;
                         PAIR 4 ;
                         LEFT (big_map (pair address nat) nat) ;
                         LOOP_LEFT
                           { UNPAIR 4 ;
                             DIG 3 ;
                             IF_CONS
                               { DUP 5 ;
                                 SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF { PUSH bool True }
                                    { DUP ; GET 3 ; SENDER ; DUP 7 ; PAIR 3 ; DUP 5 ; SWAP ; MEM } ;
                                 NOT ;
                                 IF { DROP 5 ; PUSH string "FA2_NOT_OPERATOR" ; FAILWITH }
                                    { DUP ;
                                      GET 3 ;
                                      DUP 6 ;
                                      DUP 5 ;
                                      PAIR 3 ;
                                      DUP 12 ;
                                      SWAP ;
                                      EXEC ;
                                      DUP 2 ;
                                      GET 4 ;
                                      SWAP ;
                                      SUB ;
                                      ISNAT ;
                                      IF_NONE
                                        { DROP 5 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                                        { DUP 2 ;
                                          GET 4 ;
                                          DUP 3 ;
                                          GET 3 ;
                                          DUP 4 ;
                                          CAR ;
                                          DUP 7 ;
                                          PAIR 3 ;
                                          DUP 14 ;
                                          SWAP ;
                                          EXEC ;
                                          ADD ;
                                          DIG 3 ;
                                          DUP 7 ;
                                          DIG 6 ;
                                          DIG 6 ;
                                          DIG 5 ;
                                          SOME ;
                                          DUP 7 ;
                                          GET 3 ;
                                          DIG 8 ;
                                          PAIR ;
                                          UPDATE ;
                                          DIG 4 ;
                                          SOME ;
                                          DUP 6 ;
                                          GET 3 ;
                                          DIG 6 ;
                                          CAR ;
                                          PAIR ;
                                          UPDATE ;
                                          PAIR 4 ;
                                          LEFT (big_map (pair address nat) nat) } } }
                               { SWAP ;
                                 DIG 2 ;
                                 DROP 2 ;
                                 RIGHT
                                   (pair (big_map (pair address nat) nat)
                                         (big_map (pair address address nat) unit)
                                         address
                                         (list (pair address nat nat))) } } ;
                         PAIR 3 ;
                         LEFT (big_map (pair address nat) nat) }
                       { SWAP ;
                         DROP ;
                         RIGHT
                           (pair (big_map (pair address nat) nat)
                                 (big_map (pair address address nat) unit)
                                 (list (pair address (list (pair address nat nat))))) } } ;
                 DIG 4 ;
                 DROP ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR }
               { DIG 2 ;
                 DROP ;
                 DUP 2 ;
                 CDR ;
                 SWAP ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 LEFT (big_map (pair address address nat) unit) ;
                 LOOP_LEFT
                   { UNPAIR ;
                     SWAP ;
                     IF_CONS
                       { IF_LEFT
                           { DUP ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { DIG 2 ; DROP 2 ; DUP 4 ; FAILWITH }
                                { DIG 2 ; UNIT ; SOME ; DIG 2 ; UPDATE } }
                           { DUP ;
                             CAR ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             IF { DIG 2 ; DROP 2 ; DUP 4 ; FAILWITH }
                                { DIG 2 ; NONE unit ; DIG 2 ; UPDATE } } ;
                         PAIR ;
                         LEFT (big_map (pair address address nat) unit) }
                       { RIGHT
                           (pair (big_map (pair address address nat) unit)
                                 (list (or (pair address address nat) (pair address address nat)))) } } ;
                 DIG 3 ;
                 DROP ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR } ;
             PAIR ;
             PAIR ;
             NIL operation } ;
         PAIR } }

